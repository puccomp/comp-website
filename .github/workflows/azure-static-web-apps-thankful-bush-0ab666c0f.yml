name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write # Geralmente necessário para autenticação OIDC com o Azure.
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Os dois passos seguintes para obter o token ID manualmente são provavelmente desnecessários
      # se você estiver usando o AZURE_STATIC_WEB_APPS_API_TOKEN para autenticação.
      # A ação Azure/static-web-apps-deploy@v1 normalmente lida com OIDC internamente
      # se configurada para isso (sem o api_token), ou simplesmente usa o api_token.
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_THANKFUL_BUSH_0AB666C0F }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # Caminho do código-fonte do aplicativo
          api_location: "" # Caminho do código-fonte da API - opcional
          output_location: "dist" # <--- ALTERAÇÃO PRINCIPAL AQUI: Diretório de conteúdo do aplicativo construído
          # Se você estiver usando o azure_static_web_apps_api_token, o github_id_token abaixo provavelmente não é usado pela ação.
          github_id_token: ${{ steps.idtoken.outputs.result }}
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
          # Se a autenticação OIDC fosse o método primário, você precisaria fornecer
          # o azure_static_web_apps_api_token aqui também ou configurar credenciais OIDC.
          # No entanto, para a ação "close", muitas vezes o token de implantação (api_token) é mais simples
          # ou ele pode usar o contexto da PR se configurado para ambientes de PR.
          # Se você estiver usando o token de API para upload, provavelmente precisará dele aqui também
          # ou garantir que o SWA esteja configurado para limpeza automática de PRs.
          # Para simplificar, se o token de API é o seu método principal, inclua-o:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_THANKFUL_BUSH_0AB666C0F }}
